//const columns mobile = 
//media query. const columns = 
//font family Futura-pt, Futura STD, Arial, Verdana, sans-serif, line-height 15px;
//1172 <= is mobile, after that is desktop/tablet

$darkest: black;  //h1, black
$grey1: hsl(0, 0, 17.6%); // off-black
$grey2: hsl(0, 1.2%, 31.8%); //departments-nav
$grey3: hsl(0, 0, 40%); //sort filter text, all footer text
$grey4: hsl(0,0, 45.9%); //search-text
$grey5: hsl(0, 0, 86.7%); //bottom footer background
$grey6: hsl(0, 0, 93.3%); //sort filter background, footer background
$grey7: hsl(0, 0, 97.3%); //workwear category background
$lightest: white;    
$accent: hsl(344, 83.3%, 44.5%); 

//Vars 
:root {
  --rad: 2rem; 
  --dur: .3s;
  --color-dark: #2f2f2f;
  --color-light: #fff;
  --color-brand: #57bd84;
  --font-fam: 'futura-pt', sans-serif;
  // --font-fam: 'arial', sans-serif;

  --height: 2.4rem; 
  --btn-width: 6rem;
  --bez: cubic-bezier(0, 0, 0.43, 1.49);
}

* {
  // outline: 1px solid green;  
}

.burger {
  color: white; 
}

.homescreen { 
  display: grid; 
  grid-template-columns: 1fr; 
  grid-template-rows: repeat (6, auto);     
  grid-template-areas: 
    "navbar"
    "departmentbar"
    "banner"
    "sort-filter"
    "search-results"
    "footer";
  width: 100%; 

  //make search results a separate grid with flexible columns (see css tricks)
  // make footer a sepearate grid of 1 component. after certian screen width, add elements inside in grid format
}

// .html {background-color: black;}  

.navbar {
  grid-area: navbar;
  background-color: $grey1; 
  display: flex;
  justify-content: center; 
  width: 100%;   
  
  .container {
    display: flex; 
    justify-content: space-between;   
    width: 100%; 
    max-width: 1366px;  
    padding: 0.7rem;  

    form {
      display: none;
    }

  }
}

.burgerlogo {
  display: flex; 
  align-items: center; 
  gap: 1rem; 

  img {
    width: calc(3.0rem + 1.2vw);      
    height: auto; 
  } 
  .burger {
    display: flex;
  }
  .logo {
    display: flex; 
  }
  
  .gender {
    display: none;
  }

}

.searchbasket {
  display: flex; 
  align-items: center;  
  gap: 1.5rem;    

  .basket {
    display: flex;
  }

  .search {
    display: flex;
  }

}


//1172 <= is mobile, after that is desktop/tablet
@media only screen and (min-width: 1173px) { 
  .navbar {
    grid-area: navbar;
    background-color: $grey1; 
    display: flex;
    justify-content: center; 
    width: 100%;   

    .container {
      display: flex; 
      justify-content: space-between;   
      align-items: center; 
      width: 100%;  
      padding: 0 2.1rem;   

      form {
        display:block; 
        position: relative;
        width: 790px; 
        // background: var(--color-brand);
        border-radius: var(--rad); 
        background-color: white; 

        input {
          height: var(--height);
          font-family: var(--font-fam);
          border: 0;
          color: $grey1; 
          font-size: 1.05rem;   
          outline: 0; // <-- shold probably remove this for better accessibility, adding for demo aesthetics for now.
          width: 100%;
          padding: 0 1.3rem;
          border-radius: var(--rad);
          appearance: none; //for iOS input[type="search"] roundedness issue. border-radius alone doesn't work
          
          // z-index: 1;
          // position: relative;
          // background: var(--color-light);

          // transition: all var(--dur) var(--bez);
          // transition-property: width, border-radius;
        }

        input::-webkit-search-cancel-button {
          -webkit-appearance: none;
          height: 1rem; 
          width: 1em;
          // border-radius: 50em;  
          background: url("../public/imageBank/search-delete.png") no-repeat 50% 50%;
          background-size: contain;
          opacity: 1;

          position: relative; 
          z-index: 10000; 
          margin-right: 2rem;
          // pointer-events: none; 
      }
        button {
          height: var(--height);
          border: 0;
          // display: none; // prevent being able to tab to it
          position: absolute;
          z-index: 10; 
          top: 0;
          right: 0;
          // width: var(--btn-width);
          // font-weight: bold;
          background-color: white;
          border-radius:  var(--rad);
        }

        button img {
          height: 50%;
          margin: 0 0.8rem; 
        }

        input:not(:placeholder-shown) {
          // border-radius: var(--rad) 0 0 var(--rad);
          // width: calc(100% - var(--btn-width));

          + button {
            // display: block;
          }
        }

        input[type="search"]:active .searchbar-search {
          background-color: blue;   
        }
        // label {
        //   position: absolute;
        //   clip: rect(1px, 1px, 1px, 1px);
        //   padding: 0;
        //   border: 0;
        //   height: 1px;
        //   width: 1px;
        //   overflow: hidden;

        // }

      }
    }

  }

  .burgerlogo {
    gap: 0rem;  

    .burger {
      display: none;  
    }

    .logo {
      margin-right: 1.3rem;  
    }

    .gender {
      display: flex;
      justify-content: center;
      color: white;
      padding: 1.4rem;   
      width: 7.0rem;    

      font-family: 'futura-pt'; 
      font-weight: bold;
      letter-spacing: 3px; 
      font-size: 0.8rem;  

    }
    .women {
      background-color: $grey2;  

    }

    .men {
      border-right: 1px solid $grey2;
    }
  }

}


.departmentbar {
  grid-area: departmentbar;
  padding: 0.7rem; 
  background-color: $grey2;  
  color: white;
  display: flex; 
  justify-content: center; 
  width: 100%; 
  display: none;  


  .container {
    display: flex; 
    width: 100%;  
    max-width: 1366px;  
    // flex-wrap: wrap;  
    // display: none; 
    
    ul {
      display: flex; 
      list-style: none; 
      gap: 1.2rem; 
      flex-wrap: wrap; 

    }
  }
}

.banner {
  grid-area: banner;
  background-color: $grey7;   
  color: $grey1; 
  padding: 0.8rem;  
  text-align: center;
  width: 100%;   

  h1 {
    color: black; 
  }

  .view-more {
    cursor: pointer; 
    font-weight: bold; 
  }
}

.sort-filter { 
  grid-area: sort-filter;
  // padding: 1rem; 
  background-color: $grey6;   
  width: 100%;    
}

.search-results {
  grid-area: search-results;
  //grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); 
  //const columns mobile = 
  //media query. const columns = 
  width: 100%;    
}

.footer {
  grid-area: footer;
  background-color: $grey5;   
    //const columns mobile = 
//media query. const columns = 
  width: 100%;    

}

